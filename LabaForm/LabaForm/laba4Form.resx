<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>