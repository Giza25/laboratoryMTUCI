<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jDFmcl5e/gcnHFasq2NmewAAAABJRU5ErkJggg==
</value>
  </data>
</root>